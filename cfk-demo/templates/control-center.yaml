apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: control-center
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.controlCenter.replicas }}
  image:
    application: {{ .Values.images.controlCenter }}
    init: {{ .Values.images.init }}
  podTemplate:
    labels:
      app.kubernetes.io/part-of: kafka-poc
    podSecurityContext:
      runAsUser: 1001760001
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
{{/*  storageClass:*/}}
{{/*    name: ocs-storagecluster-ceph-rbd*/}}
  dataVolumeCapacity: 250Mi
{{/*  tls:*/}}
{{/*    secretRef: tls-control-center*/}}
  authentication:
    type: ldap
    ldap: 
      secretRef: ldap-secret
      property:
        useLdaps: "true"
        # contextFactory: "com.sun.jndi.ldap.LdapCtxFactory"
        hostname: "localhost"
        port: "389"
        bindDn: ""
        bindPassword: ""
        authenticationMethod: "simple"
        forceBindingLogin: "true"
        userBaseDn: "ou=People,dc=example,dc=org"
        userRdnAttribute: "uid"
        userIdAttribute: "cn"
        userPasswordAttribute: "userPassword"
        userObjectClass: "person"
        roleBaseDn: "ou=Groups,dc=example,dc=org"
        roleNameAttribute: "cn"
        roleMemberAttribute: "member"
        roleObjectClass: "group"
  dependencies:
    kafka:
      bootstrapEndpoint: {{ .Values.kafka.name }}.{{ .Values.namespace }}.svc.cluster.local:9071
    schemaRegistry:
{{/*      url: https://schema-registry.cfk.svc.cluster.local:8081*/}}
      url: {{ printf "http://%s.%s.svc.cluster.local:8081" .Values.schemaRegistry.name .Values.namespace}}
{{/*      tls:*/}}
{{/*        enabled: true*/}}
